说明：k8s安装版本V1.13.5，#为linux需要执行的命令

准备4台机器，master、node1、node2资源至少需要2cpu，2000M内存
192.168.56.200        kubespray、私有register仓库、安装机
192.168.56.120        master
192.168.56.121         node1
192.168.56.122        node2

----------------------------120机器执行------------------------------
#vi /etc/hosts
192.168.56.120 master

----------------------------121机器执行------------------------------
#vi /etc/hosts
192.168.56.121 node1

----------------------------122机器执行------------------------------
#vi /etc/hosts
192.168.56.122 node2

----------------------------120、121、122机器------------------------
关闭网络管理，否则静态ip不生效，还是动态ip
#systemctl stop NetworkManager && systemctl disable NetworkManager

关闭防火墙
#systemctl disable firewalld && systemctl stop firewalld

设置SELINUX=disabled
#sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config

关闭swap
#swapoff -a && echo "vm.swappiness=0" >> /etc/sysctl.conf && sysctl -p && free –h

设置iptables
#iptables -P FORWARD ACCEPT

更新系统内核并重启,安装perl
#yum install -y perl
#rpm -Uvh /tmp/releases/linux/kernel-lt-4.4.180-1.el7.elrepo.x86_64.rpm
#rpm -Uvh /tmp/releases/linux/kernel-lt-devel-4.4.180-1.el7.elrepo.x86_64.rpm

设置新内核优先启动
#grub2-set-default 0

重启
#reboot

重启后增加内核设置
#echo "net.bridge.bridge-nf-call-iptables = 1" >> /etc/sysctl.conf && echo "net.bridge.bridge-nf-call-ip6tables = 1" >> /etc/sysctl.conf   && sysctl -p 

-----------------------------------------200机器执行-------------------------------------------
安装 centos的epel源
#yum -y install epel-release
#yum clean all && yum makecache

安装软件，ansible 必须 >= 2.7
#yum install -y python-pip python34 python-netaddr python34-pip ansible

下载kubespray源码，这里使用已经下载好了的压缩包kubespray-2.9.0.tar.gz
#tar -zxf kubespray-2.9.0.tar.gz

后续操作均在~/kubespray-2.9.0目录下执行
#pip install -r requirements.txt

复制配置我们要安装集群的配置文件
#cp -rfp inventory/sample inventory/mycluster

#vi inventory/mycluster/inventory.ini
-------------------------------------文件内容开始--------------------------------------------
[all]
master ansible_host=192.168.56.120  ip=192.168.56.120 etcd_member_name=etcd
node1  ansible_host=192.168.56.121  ip=192.168.56.121 
node2  ansible_host=192.168.56.122  ip=192.168.56.122 

[kube-master]
master

[etcd]
master

[kube-node]
node1
node2

[k8s-cluster:children]
kube-master
kube-node

[calico-rr]
-------------------------------------文件内容结束----------------------------------------------

修改配置文件，把google的镜像地址替换成私有仓库地址，具体参考k8s-cluster.yml和main.yml文件

#vi inventory/mycluster/group_vars/k8s-cluster/k8s-cluster.yml
kube_image_repo: "gcrcontainer"

#vi ./roles/download/defaults/main.yml
kube_image_repo: ""

pod_infra_image_repo: "gcrcontainer/pause-{{ image_arch }}"
dnsautoscaler_image_repo: "gcrcontainer/cluster-proportional-autoscaler-{{ image_arch }}"
dashboard_image_repo: "gcrcontainer/kubernetes-dashboard-{{ image_arch }}"

修改dashboard的Service配置，开启nodePort端口，具体参考dashboard.yml.j2
vi ./roles/kubernetes-apps/ansible/templates/dashboard.yml.j2
type: NodePort


#vi /etc/hosts
192.168.56.120 master
192.168.56.121 node1
192.168.56.122 node2

200机器免ssh登录120、121、122
#ssh-keygen -t rsa
#ssh-copy-id root@192.168.56.120
#ssh-copy-id root@192.168.56.121
#ssh-copy-id root@192.168.56.122

--------------------------------------环境准备结束，开始安装-------------------------------------

执行安装脚本
#ansible-playbook -i inventory/mycluster/inventory.ini cluster.yml -b -v -k

安装成功，查看dashboard的服务端口port
#kubectl get svc --all-namespaces | grep kubernetes-dashboard

浏览器访问dashboard会有证书问题，推荐使用firefox访问dashboard，地址：https://192.168.56.120:port

选择token方式登录，获取token
#kubectl -n kube-system describe $(kubectl -n kube-system get secret -n kube-system -o name | grep namespace) | grep token





----------------------------------------运维经验，未验证？-----------------------------------------
如果需要扩容Work节点，则修改hosts.ini文件，增加新增的机器信息。然后执行下面的命令：
ansible-playbook -i inventory/mycluster/hosts.ini scale.yml -b -v -k

将hosts.ini文件中的master和etcd的机器增加到多台，执行部署命令
ansible-playbook -i inventory/mycluster/hosts.ini cluster.yml -b -vvv

刪除节点，如果不指定节点就是刪除整个集群：
ansible-playbook -i inventory/mycluster/hosts.ini remove-node.yml -b -v

如果需要卸载，可以执行以下命令：
ansible-playbook -i inventory/mycluster/hosts.ini reset.yml -b –vvv

升级K8s集群，选择对应的k8s版本信息，执行升级命令。涉及文件为upgrade-cluster.yml。
ansible-playbook upgrade-cluster.yml -b -i inventory/mycluster/hosts.ini -e kube_version=vX.XX.XX -vvv












